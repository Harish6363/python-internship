police
l=[-1 ,-1, 2, -1, -1, -1, -1, -1, -1, -1, -1]
a=0
c=0
for i in l:
    if i==-1:
        if a>0:
            a-=1
        else:
            c+=1
    else:
        a+=i
print(c)
        


l1=[]
l=[1,2,3,4]
sum=0
for i in l:
    sum+=i
    l1.append(sum)
print(l1)


l=[2,5,1,3,4,7]
a=len(l)
b=int(a/2)
l1=[]
for i in range(b):
    l1.append(l[i])
    l1.append(l[i+b])
print(l1)


l=[1,2]
l.sort()
l1=[]
for i in l:
    if i not in l1:
        l1.append(i)
print(l1)
if len(l1)>2:
    print(l1[2])
else:
    print(l1[-1])



l=["5","2","C","D","+"]
l1=[]
for i in l:
    if i=="C":
        l1.pop()
    elif i=="D":
        
        l1.append(2*l1[-1])
    elif i=="+":
        l1.append(l1[-1]+l1[-2])
    else:
        
        l1.append(int(i))
print(l1)



l=[0,1,0,3,12]
for i in l:
    if i==0:
        l.append(i)
        l.remove(i)
print(l)


maximum 1st and 2nd
l=[0,1,2,2,3,0,4,2]
l.sort(reverse=True)
print(l[0])
print(l[1])




missing
a=[17,18,5,4,6,1]
l=[]
for i in range(len(a)-1):
    m=max(a[i+1:])
    l.append(m)
l=l+[-1]
print(l)
    
        
        
class Solution:
    def replaceElements(self, arr: List[int]) -> List[int]:
        n=len(arr)
        m=-1
        for i in range(n-1,-1,-1):
            new_val=m
            m=max(m,arr[i])
            arr[i]=new_val
        return arr






num=int(input("enter the number:"))
res=num & 1
if res==1:
    print("odd")
else:
    print("even")
    
   
   
a=int(input("enter the number a:"))
b=int(input("enter the number b:"))
a=a ^ b
b=a ^ b
a=a ^ b
# a=a | b
print(a,b) 




finding the bit number
def bina(num):
    d=num%4
    if d==1:
        return 1
    elif d==2:
        return num+1
    elif d==3:
        return 0
    else:
        return num
l,r=map(int,input().split())
a=bina(r)
b=bina(l-1)
print(a^b)




num=int(input("enter the number:"))
a=bin(num)
print(a)
